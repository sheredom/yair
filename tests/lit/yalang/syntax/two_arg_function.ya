// RUN: @compiler --emit yair @file
// CHECK: mod "" {
// CHECK: fn func(a : i32, b : u32) : u32 {
// CHECK:   b0([[a:\w+]] : i32, [[b:\w+]] : u32):
// CHECK:     [[aVar:\w+]] = stackalloc a, i32
// CHECK:     store $$aVar, $$a
// CHECK:     [[bVar:\w+]] = stackalloc b, u32
// CHECK:     store $$bVar, $$b
// CHECK:     br b1()
// CHECK:   b1():
// CHECK:     [[aLoad:\w+]] = load $$aVar
// CHECK:     [[aCast:\w+]] = cast $$aLoad to u32
// CHECK:     [[bLoad:\w+]] = load $$bVar
// CHECK:     [[result:\w+]] = mul $$aCast, $$bLoad
// CHECK:     ret $$result
// CHECK:   }
// CHECK: }
 
func : function(a : i32, b : u32) : u32 {
  return (a as u32) * b;
}
