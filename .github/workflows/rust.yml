name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    # run fmt to verify we have no non-formatted syntax
    - run: rustup component add rustfmt
    - run: cargo fmt -- --check --color always
    
    # run clippy to verify we have no warnings
    - run: rustup component add clippy
    - run: cargo clippy --lib --tests -- -D warnings

    # make sure cargo deny does not result in any errors
    - run: cargo install cargo-deny --locked
    - run: cargo deny check

  publish-check:
    name: Publish Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run

  test-no-default-features:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Test
      run: cargo test --no-default-features

  test-yalang-feature:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Test
      run: cargo test --features=yalang

  test-llvm-feature:
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - if: matrix.os == 'windows-latest'
      run: powershell.exe -NoP -NonI -Command "Invoke-WebRequest https://github.com/WAVM/WAVM-LLVM/releases/download/12.x/Win64_Release.zip -O Win64_Release.zip"
    - if: matrix.os == 'windows-latest'
      run: powershell.exe -NoP -NonI -Command "Expand-Archive '.\Win64_Release.zip' '.\llvm\'"
    - if: matrix.os == 'ubuntu-18.04'
      run: wget https://github.com/WAVM/WAVM-LLVM/releases/download/12.x/Ubuntu1604_Release.zip
    - if: matrix.os == 'ubuntu-18.04'
      run: unzip -d llvm Ubuntu1604_Release.zip
    - if: matrix.os == 'macOS-latest'
      run: wget https://github.com/WAVM/WAVM-LLVM/releases/download/12.x/MacOS_Release.zip
    - if: matrix.os == 'macOS-latest'
      run: unzip -d llvm MacOS_Release.zip
    - run: cargo test --features llvm
      env:
        YAIR_LLVM_INSTALL_DIR: llvm

  benchmark:
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - if: matrix.os == 'windows-latest'
      run: powershell.exe -NoP -NonI -Command "Invoke-WebRequest https://github.com/WAVM/WAVM-LLVM/releases/download/12.x/Win64_Release.zip -O Win64_Release.zip"
    - if: matrix.os == 'windows-latest'
      run: powershell.exe -NoP -NonI -Command "Expand-Archive '.\Win64_Release.zip' '.\llvm\'"
    - if: matrix.os == 'ubuntu-18.04'
      run: wget https://github.com/WAVM/WAVM-LLVM/releases/download/12.x/Ubuntu1604_Release.zip
    - if: matrix.os == 'ubuntu-18.04'
      run: unzip -d llvm Ubuntu1604_Release.zip
    - if: matrix.os == 'macOS-latest'
      run: wget https://github.com/WAVM/WAVM-LLVM/releases/download/12.x/MacOS_Release.zip
    - if: matrix.os == 'macOS-latest'
      run: unzip -d llvm MacOS_Release.zip
    - run: rustup toolchain install nightly
      # The sed here is to remove double : which rhysd's action doesn't account for it seems!
    - run: cargo +nightly bench --features llvm,nightly | sed 's/::/__/g' | tee benchmark_output.txt
      env:
        YAIR_LLVM_INSTALL_DIR: llvm
    - name: Store benchmark result
      uses: rhysd/github-action-benchmark@v1
      with:
        name: Rust Benchmark on ${{ matrix.os }}
        tool: 'cargo'
        output-file-path: benchmark_output.txt
        # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/td-p/26869/highlight/false
        github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        auto-push: true
