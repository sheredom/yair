COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" | "//" ~ (!line_terminator ~ ANY)* }
WHITESPACE = _{
  SPACE_SEPARATOR |
  line_terminator
}

digit = { '0'..'9' }
raw_string = { (!("\\" | "\"") ~ ANY)+ }

// Quoted identifiers can be anything (including unicode!).
quoted_ident = { "\"" ~ (raw_string)* ~ "\"" }

// Unquoted identifiers can only be ASCII alphanumerical.
unquoted_ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_") * }

ident = _{ quoted_ident | unquoted_ident }

line_terminator = _{ "\u{000A}" | "\u{000D}" | "\u{2028}" | "\u{2029}" }

fn_decl = _{ "fn" ~ ident ~ "(" ~ (ident ~ ":" ~ ty ~ ("," ~ ident ~ ":" ~ ty)*)? ~ ")" ~ ":" ~ ty }

func = { fn_decl }

width = { digit+ }

ty = { ident | ("*" ~ ty) | ("<" ~ ty ~ "," ~ width ~ ">") | ("[" ~ ty ~ "," ~ width ~ "]") | ("{" ~ (ty ~ ",")* ~ ty? ~ "}") }

var = { "var" ~ ident ~ ":" ~ ty }

export = { "export" }

fn_or_var = _{ export? ~ (func | var) }

module = { "mod" ~ ident ~ "{" ~ fn_or_var* ~ "}" }

main = _{ SOI ~ module* ~ EOI }
